---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
  const mainPosts = (await Astro.glob('../../pages/posts/*.md')).sort(
    (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
  );
  const tilPosts = (await Astro.glob('../../pages/tils/*.md')).sort(
    (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
  );
  const allPosts = mainPosts.concat(tilPosts);
  const mainPostTags = [...new Set(mainPosts.map((post) => post.frontmatter.tags).flat())];
  const tilPostTags = [...new Set(tilPosts.map((post) => post.frontmatter.tags).flat())];
  const tags = [...new Set(mainPostTags.concat(tilPostTags))].sort()
  return tags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    const nonDraftPosts = filteredPosts.filter((post) => !post.frontmatter.draft);
    return {
      params: { tag },
      props: { posts: nonDraftPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
	<div>
		<ul class="list">
			{posts.map((post) => 
				<BlogPost url={post.url + "/"} title={post.frontmatter.title} pubDate={new Date(post.frontmatter.pubDate).toLocaleDateString('en-us', {
					year: 'numeric',
					month: 'long',
					day: 'numeric',
				})} tags={post.frontmatter.tags}/>
			)}
		</ul>
	</div>
</BaseLayout>
